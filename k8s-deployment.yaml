apiVersion: v1
kind: ConfigMap
metadata:
  name: cobol-eval-config
  namespace: default
data:
  SAMPLE_SIZE: "100"
  EVALUATION_TYPE: "complete"
  SECURITY_MODE: "enabled"
---
apiVersion: v1
kind: Secret
metadata:
  name: cobol-eval-secrets
  namespace: default
type: Opaque
stringData:
  AWS_ACCESS_KEY_ID: "REPLACE_WITH_ACTUAL_KEY"  # Replace before deployment
  AWS_SECRET_ACCESS_KEY: "REPLACE_WITH_ACTUAL_SECRET"  # Replace before deployment
  AWS_REGION: "us-east-1"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cobol-evaluation-framework
  namespace: default
  labels:
    app: cobol-eval
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cobol-eval
  template:
    metadata:
      labels:
        app: cobol-eval
    spec:
      containers:
      - name: cobol-evaluator
        image: python:3.11-slim
        command: ["/bin/bash"]
        args: ["-c", "cd /app && pip install -r requirements.txt && python src/complete_cobol_evaluator.py"]
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
          limits:
            memory: "4Gi" 
            cpu: "2000m"
        env:
        - name: SAMPLE_SIZE
          valueFrom:
            configMapKeyRef:
              name: cobol-eval-config
              key: SAMPLE_SIZE
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: cobol-eval-secrets
              key: AWS_ACCESS_KEY_ID
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: cobol-eval-secrets
              key: AWS_SECRET_ACCESS_KEY
        - name: AWS_REGION
          valueFrom:
            secretKeyRef:
              name: cobol-eval-secrets
              key: AWS_REGION
        volumeMounts:
        - name: app-code
          mountPath: /app
        - name: results-volume
          mountPath: /results
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
      volumes:
      - name: app-code
        emptyDir: {}  # Fixed: Use emptyDir instead of missing ConfigMap
      - name: results-volume
        emptyDir: {}
      restartPolicy: Always
      securityContext:
        fsGroup: 1000